{"ast":null,"code":"var _jsxFileName = \"/Users/jingshu/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Display1 = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: props.value\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 3,\n  columnNumber: 27\n}, this);\n\n_c = Display1;\n\nconst Display2 = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: props.value\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 27\n}, this);\n\n_c2 = Display2;\n\nconst Display3 = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: props.value\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 27\n}, this);\n\n_c3 = Display3;\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: props.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\n\n_c4 = Button;\n\nconst App = () => {\n  _s();\n\n  const [value, setValue] = useState(10);\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const setToValue1 = newValue => {\n    setValue(newValue);\n  };\n\n  const setToValue2 = newValue => {\n    setValue(newValue);\n  };\n\n  const setToValue3 = newValue => {\n    setValue(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Display1, {\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display2, {\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display3, {\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setToValue1(1000),\n      text: \"thousand\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setToValue2(0),\n      text: \"reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setToValue3(value + 1),\n      text: \"increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ivcWFy0Q9Mnz9dVp2qDSsPeeFN4=\");\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Display1\");\n$RefreshReg$(_c2, \"Display2\");\n$RefreshReg$(_c3, \"Display3\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","useState","Display1","props","value","Display2","Display3","Button","handleClick","text","App","setValue","good","setGood","neutral","setNeutral","bad","setBad","setToValue1","newValue","setToValue2","setToValue3"],"sources":["/Users/jingshu/part1/unicafe/src/App.js"],"sourcesContent":["import React, { useState } from 'react'\n\nconst Display1 = props => <div>{props.value}</div>\nconst Display2 = props => <div>{props.value}</div>\nconst Display3 = props => <div>{props.value}</div>\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.text}\n  </button>\n)\n\nconst App = () => {\n  const [value, setValue] = useState(10)\n\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n\n  const setToValue1 = newValue => {\n    setValue(newValue)\n  }\n  const setToValue2 = newValue => {\n    setValue(newValue)\n  }\n  const setToValue3 = newValue => {\n    setValue(newValue)\n  }\n\n  return (\n    <div>\n      <Display1 value={value} />\n      <Display2 value={value} />\n      <Display3 value={value} />\n      <Button handleClick={() => setToValue1(1000)} text=\"thousand\" />\n      <Button handleClick={() => setToValue2(0)} text=\"reset\" />\n      <Button handleClick={() => setToValue3(value + 1)} text=\"increment\" />\n    </div>\n  )\n}\nexport default App\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,iBAAI;EAAA,UAAMA,KAAK,CAACC;AAAZ;EAAA;EAAA;EAAA;AAAA,QAA1B;;KAAMF,Q;;AACN,MAAMG,QAAQ,GAAGF,KAAK,iBAAI;EAAA,UAAMA,KAAK,CAACC;AAAZ;EAAA;EAAA;EAAA;AAAA,QAA1B;;MAAMC,Q;;AACN,MAAMC,QAAQ,GAAGH,KAAK,iBAAI;EAAA,UAAMA,KAAK,CAACC;AAAZ;EAAA;EAAA;EAAA;AAAA,QAA1B;;MAAME,Q;;AAEN,MAAMC,MAAM,GAAIJ,KAAD,iBACb;EAAQ,OAAO,EAAEA,KAAK,CAACK,WAAvB;EAAA,UACGL,KAAK,CAACM;AADT;EAAA;EAAA;EAAA;AAAA,QADF;;MAAMF,M;;AAMN,MAAMG,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACN,KAAD,EAAQO,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;EAEA,MAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,CAAD,CAAtC;EACA,MAAM,CAACe,GAAD,EAAMC,MAAN,IAAgBhB,QAAQ,CAAC,CAAD,CAA9B;;EAGA,MAAMiB,WAAW,GAAGC,QAAQ,IAAI;IAC9BR,QAAQ,CAACQ,QAAD,CAAR;EACD,CAFD;;EAGA,MAAMC,WAAW,GAAGD,QAAQ,IAAI;IAC9BR,QAAQ,CAACQ,QAAD,CAAR;EACD,CAFD;;EAGA,MAAME,WAAW,GAAGF,QAAQ,IAAI;IAC9BR,QAAQ,CAACQ,QAAD,CAAR;EACD,CAFD;;EAIA,oBACE;IAAA,wBACE,QAAC,QAAD;MAAU,KAAK,EAAEf;IAAjB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,QAAD;MAAU,KAAK,EAAEA;IAAjB;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,QAAD;MAAU,KAAK,EAAEA;IAAjB;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE,QAAC,MAAD;MAAQ,WAAW,EAAE,MAAMc,WAAW,CAAC,IAAD,CAAtC;MAA8C,IAAI,EAAC;IAAnD;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE,QAAC,MAAD;MAAQ,WAAW,EAAE,MAAME,WAAW,CAAC,CAAD,CAAtC;MAA2C,IAAI,EAAC;IAAhD;MAAA;MAAA;MAAA;IAAA,QALF,eAME,QAAC,MAAD;MAAQ,WAAW,EAAE,MAAMC,WAAW,CAACjB,KAAK,GAAG,CAAT,CAAtC;MAAmD,IAAI,EAAC;IAAxD;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CA5BD;;GAAMM,G;;MAAAA,G;AA6BN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}